<link rel="import" href="../bower_components/polymer/polymer.html">

<dom-module id="xl-gallery">
	<template>
  <style>
    img {
      margin: 0;
      padding: 0;
      max-width: calc(100%/3);
      transition: all 0.25s cubic-bezier(.25,.8,.25,1);
    }

    .thumb:hover {
      z-index: 2;
      box-shadow: 0 0 15px 4px rgba(0,0,0,0.5);
      transform-origin: 50% 50%;
      transform: scale(1.04);
      cursor: pointer;
    }

    .container {
      width: 100%;
      max-width: 980px;
      margin: auto;
      margin-top: 32px;
      background-color: white;
      display: flex;
      flex-wrap: wrap;
      align-items: center;
      justify-content: center;
    }

    #overlay {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      pointer-events: none;
      z-index: 30;
      transition: all 0.25s cubic-bezier(.25,.8,.25,1);
      display: flex;
      justify-content: center;
      align-items: center;
      will-change: transform;
    }

    #largeImg {
      transform-origin: 0 0;
      box-sizing: border-box;
      padding: 32px;
      will-change: transform;
    }

    #bkgColor {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      transition: all 0.25s cubic-bezier(.25,.8,.25,1);
      background-color: rgba(0,0,0,0.5);
      opacity: 0;

    }

  </style>

  <div class="container">
      <img class="thumb" src="../images/gallery/0.jpg" on-tap="handleTap">      
      <img class="thumb" src="../images/gallery/1.jpg" on-tap="handleTap">      
      <img class="thumb" src="../images/gallery/2.jpg" on-tap="handleTap">      
      <img class="thumb" src="../images/gallery/3.jpg" on-tap="handleTap">      
      <img class="thumb" src="../images/gallery/4.jpg" on-tap="handleTap">      
      <img class="thumb" src="../images/gallery/5.jpg" on-tap="handleTap">      
      <img class="thumb" src="../images/gallery/6.jpg" on-tap="handleTap">      
      <img class="thumb" src="../images/gallery/7.jpg" on-tap="handleTap">      
      <img class="thumb" src="../images/gallery/8.jpg" on-tap="handleTap">      
      <img class="thumb" src="../images/gallery/9.jpg" on-tap="handleTap">
      <img class="thumb" src="../images/gallery/10.jpg" on-tap="handleTap">
      <img class="thumb" src="../images/gallery/11.jpg" on-tap="handleTap">
      <img class="thumb" src="../images/gallery/12.jpg" on-tap="handleTap">
      <img class="thumb" src="../images/gallery/13.jpg" on-tap="handleTap">
      <img class="thumb" src="../images/gallery/14.jpg" on-tap="handleTap">
      <img class="thumb" src="../images/gallery/15.jpg" on-tap="handleTap">
      <img class="thumb" src="../images/gallery/16.jpg" on-tap="handleTap">
      <img class="thumb" src="../images/gallery/17.jpg" on-tap="handleTap">
      <img class="thumb" src="../images/gallery/18.jpg" on-tap="handleTap">
      <img class="thumb" src="../images/gallery/19.jpg" on-tap="handleTap">
      <img class="thumb" src="../images/gallery/20.jpg" on-tap="handleTap">
      <img class="thumb" src="../images/gallery/21.jpg" on-tap="handleTap">
      <img class="thumb" src="../images/gallery/22.jpg" on-tap="handleTap">
      <img class="thumb" src="../images/gallery/23.jpg" on-tap="handleTap">
      <!-- <img class="thumb" src="../images/gallery/24.jpg" on-tap="handleTap"> -->
  </div>

  <div id="overlay">
    <div id="bkgColor"></div>
    <img src="" id="largeImg" on-tap="closeImage">
  </div>



  </template>

<script>

  Polymer({
    is: 'xl-gallery',
    ready: function() {

      var self = this;
      self.noOfImagesInRow = 3;
      self.counter = 0;
      self.listOfImages = Array.from(self.shadowRoot.querySelectorAll('.thumb'));
      self.target = self.listOfImages.length;

      self.listOfImages.forEach(function (elem) {

        var wait = setInterval(function () {
          if(elem.naturalWidth > 0) {
            self.onHasSize(wait,self);
          }
        }, 100);

      });
    },

    onHasSize : function (loop,self) {
      clearInterval(loop);
      self.counter += 1;

      if (self.counter === self.target) {
      self.displayImages(self);
      var st = document.createElement('style');
      st.innerHTML = "img{max-width : none;}";
      self.shadowRoot.appendChild(st);
      }


    },

    displayImages : function (self) {
      var noOfImagesInRow = self.noOfImagesInRow;
      var containerWidth = self.shadowRoot.querySelector('.container').getBoundingClientRect().width;

      var commonHeight = 0,
          nw1 = 0,
          nw2 = 0;

      for(var i = 0; i < self.target; i=i+self.noOfImagesInRow) {

        var naturalDimensions = []

        for(var j = 0; j < self.noOfImagesInRow; j++) {
          naturalDimensions.push({
            w : self.listOfImages[i+j].naturalWidth,
            h : self.listOfImages[i+j].naturalHeight
          });          
        }

        var denominator = 0;

        for(var j = 0; j < naturalDimensions.length; j++) {
          denominator += naturalDimensions[j].w/naturalDimensions[j].h;
        }

        commonHeight = containerWidth / denominator;

        var widthNew = []

        for(var j = 0; j < naturalDimensions.length; j++) {
          widthNew[j] = (naturalDimensions[j].w/naturalDimensions[j].h)*commonHeight;
        }


        for(var j = 0; j < noOfImagesInRow; j++) {
          self.listOfImages[i+j].style.width = widthNew[j]+"px";
          self.listOfImages[i+j].style.height = commonHeight+"px";
        }
      }

    },

    handleTap : function (evt) {
      var image = evt.target;
      var largeImage = this.$.largeImg;
      largeImage.style.transition = "none";
      largeImage.style.transform = "none";
      var overlay = this.$.overlay;
      var overlayDim = overlay.getBoundingClientRect();
      var initialPos = image.getBoundingClientRect();
      var overlayPos = overlay.getBoundingClientRect();


      largeImage.src = image.src

      var lhs = overlayDim.width;
      var rhs = (initialPos.width/initialPos.height)*overlayDim.height;
      console.log('lhs & rhs',lhs, rhs);

      if( lhs > rhs ) {
        largeImage.style.height = "100%";
      }

      else {
        largeImage.style.width = "100%";
      }

      var finalPos = largeImage.getBoundingClientRect();

      console.log('initialPos', initialPos);
      console.log('finalPos', finalPos);


      var tx = (initialPos.left - finalPos.left) + "px";
      var ty = (initialPos.top - finalPos.top) + "px";
      var translate = "translate("+tx+","+ty+")";

      var sx = initialPos.width/finalPos.width;
      var sy = initialPos.height/finalPos.height;
      var scale = "scale("+sx+","+sy+")";

      var transform = translate+" "+scale;
      this.transform = transform;
      largeImage.style.transform = transform;
      largeImage.getBoundingClientRect();
      largeImage.style.transition = "all 0.25s cubic-bezier(.25,.8,.25,1)";
      largeImage.style.transform = "none";
      this.$.bkgColor.style.opacity = "1";
      overlay.style.pointerEvents = "auto";


    },

    closeImage : function () {
      var overlay = this.$.overlay;
      var largeImage = this.$.largeImg;
      overlay.style.pointerEvents = "none";
      largeImage.style.transform = this.transform;
      this.$.bkgColor.style.opacity = "0";
      setTimeout(function () {
        largeImage.src = "";
      }, 250)
    }

  });
</script>
</dom-module>
